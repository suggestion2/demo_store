<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.store.demo.mapper.OrderItemMapper">

    <select id="selectById" resultType="com.store.demo.domain.OrderItem" parameterType="java.lang.Integer">
        select * from `order_item` where id= #{id} and `valid` = 1
    </select>

    <select id="select" resultType="com.store.demo.domain.OrderItem" parameterType="java.util.Map">
        select * from `order_item` where `valid` = 1
        <if test="id!=null">
            and `id` = #{id}
        </if>
    </select>

    <select id="selectList" resultType="com.store.demo.domain.OrderItem" parameterType="java.util.Map">
        select * from `order_item` where `valid` = 1
        <if test="id!=null">

        </if>
        <if test="startIndex != null and pageSize != null">
            limit #{startIndex},#{pageSize}
        </if>
    </select>

    <select id="selectCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*) from `order_item` where `valid` = 1
        <if test="id!=null">

        </if>
    </select>

    <insert id="insert" parameterType="com.store.demo.domain.OrderItem" useGeneratedKeys="true" keyProperty="id">
        insert into `order_item`
        (
        `orderId`,
        `cartItemId`,
        `goodsId`,
        `unitId`,
        `goodsName`,
        `bannerUrl`,
        `price`,
        `shippingCost`,
        `amount`,
        `count`,
        `createBy`,
        `updateBy`,
        `status`,
        `unitName`,
        `comment`
        )
        values
        (
        #{orderId},
        #{cartItemId},
        #{goodsId},
        #{unitId},
        #{goodsName},
        #{bannerUrl},
        #{price},
        #{shippingCost},
        #{amount},
        #{count},
        #{createBy},
        #{createBy},
        #{status},
        #{unitName},
        #{comment}
        )
    </insert>

    <update id="update" parameterType="com.store.demo.domain.OrderItem">
        update `order_item` set
        `orderId` = #{orderId},
        `cartItemId` = #{cartItemId},
        `goodsId` = #{goodsId},
        `unitId` = #{unitId},
        `goodsName` = #{goodsName},
        `goodsNumber` = #{goodsNumber},
        `bannerUrl` = #{bannerUrl},
        `price` = #{price},
        `shippingCost` = #{shippingCost},
        `amount` = #{amount},
        `count` = #{count},
        `updateBy` = #{updateBy},
        `status` = #{status},
        `unitName` = #{unitName},
        `comment` = #{comment},
        `updateTime` = now()
        where `id` = #{id}
    </update>

    <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        insert into `order_item`
        (
        `orderId`,
        `cartItemId`,
        `goodsId`,
        `unitId`,
        `unitName`,
        `goodsName`,
        `goodsNumber`,
        `bannerUrl`,
        `price`,
        `shippingCost`,
        `amount`,
        `count`
        )
        values
        <foreach item="item" index="index" collection="list" separator=",">
            (
            #{item.orderId},
            #{item.cartItemId},
            #{item.goodsId},
            #{item.unitId},
            #{item.unitName},
            #{item.goodsName},
            #{item.goodsNumber},
            #{item.bannerUrl},
            #{item.price},
            #{item.shippingCost},
            #{item.amount},
            #{item.count}
            )
        </foreach>
    </insert>

    <delete id="deleteById" parameterType="java.lang.Integer">
        update `order_item` set valid = 0 where `id` = #{id}
    </delete>
</mapper>