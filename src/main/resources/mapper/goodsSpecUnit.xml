<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.store.demo.mapper.GoodsSpecUnitMapper">

    <select id="selectById" resultType="com.store.demo.domain.GoodsSpecUnit" parameterType="java.lang.Integer">
        select * from `goods_spec_unit` where id= #{id} and `valid` = 1
    </select>

    <select id="select" resultType="com.store.demo.domain.GoodsSpecUnit" parameterType="java.util.Map">
        select * from `goods_spec_unit` where `valid` = 1
        <if test="id!=null">
            and `id` = #{id}
        </if>
    </select>

    <select id="selectList" resultType="com.store.demo.domain.GoodsSpecUnit" parameterType="java.util.Map">
        select * from `goods_spec_unit` where `valid` = 1
        <if test="goodsId!=null">
            and `goodsId` = #{goodsId}
        </if>

        <if test="startIndex != null and pageSize != null">
            limit #{startIndex},#{pageSize}
        </if>
    </select>

    <select id="selectStockList" resultType="com.store.demo.service.stock.GoodsStocks" parameterType="java.util.List">
        select id as unitId,goodsId as id,stocks from `goods_spec_unit` where `valid` = 1 and id IN
        <foreach item="item" index="index" open="(" close=")" separator="," collection="list" >
            #{item}
        </foreach>
    </select>

    <update id="updateStocks" parameterType="java.util.List">
        update  `goods_spec_unit` u set
        `stocks` = CASE
        <foreach item="item" index="index" collection="list" >
            WHEN id = #{item.unitId} THEN CASE
            when `stocks` &gt; #{item.count} then `stocks` - #{item.count} else 0 end
        </foreach>
        ELSE `stocks`
        END,
        salesVolume =
        CASE
        <foreach item="item" index="index" collection="list" >
            WHEN u.id = #{item.unitId} THEN salesVolume + #{item.count}
        </foreach>
        ELSE u.salesVolume
        END,
        `updateTime` = now()
        where `id` in
        <foreach item="item" index="index" collection="list" open="(" close=")" separator=",">
            #{item.unitId}
        </foreach>
    </update>

    <select id="selectStockById" resultType="com.store.demo.service.stock.GoodsStocks" parameterType="java.lang.Integer">
        select id as unitId,goodsId as id,stocks from `goods_spec_unit` where `valid` = 1 and `id` = #{id}
    </select>

    <select id="selectCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*) from `goods_spec_unit` where `valid` = 1
        <if test="id!=null">

        </if>
    </select>

    <insert id="batchInsert" parameterType="com.store.demo.request.SpecUnitEditForm" useGeneratedKeys="true"
            keyProperty="id">
        insert into `goods_spec_unit`
        (
        `goodsId`,
        `specIds`,
        `title`,
        `stocks`,
        `price`,
        `shippingCost`,
        `salesVolume`,
        `primary`,
        `imageUrl`,
        `createBy`,
        `updateBy`
        )
        values
        <foreach item="item" index="index" collection="list" separator=",">
            (
            #{item.goodsId},
            #{item.specIds},
            #{item.title},
            #{item.stocks},
            #{item.price},
            #{item.shippingCost},
            #{item.salesVolume},
            #{item.primary},
            #{item.imageUrl},
            #{item.updateBy},
            #{item.updateBy}
            )
        </foreach>
    </insert>

    <update id="batchUpdate" parameterType="com.store.demo.mapper.sku.GoodsSpecUnitUpdateParams">
        update `goods_spec_unit` set `title` =
        CASE
        <foreach item="item" index="index" collection="list" >
            WHEN id = #{item.id} THEN #{item.title}
        </foreach>
        ELSE `title`
        END,
        `stocks` =
        CASE
        <foreach item="item" index="index" collection="list" >
            WHEN id = #{item.id} THEN #{item.stocks}
        </foreach>
        ELSE `stocks`
        END,
        `price` =
        CASE
        <foreach item="item" index="index" collection="list" >
            WHEN id = #{item.id} THEN #{item.price}
        </foreach>
        ELSE `price`
        END,
        `shippingCost` =
        CASE
        <foreach item="item" index="index" collection="list" >
            WHEN id = #{item.id} THEN #{item.shippingCost}
        </foreach>
        ELSE `shippingCost`
        END,
        `salesVolume` =
        CASE
        <foreach item="item" index="index" collection="list" >
            WHEN id = #{item.id} THEN #{item.salesVolume}
        </foreach>
        ELSE `salesVolume`
        END,
        `primary` =
        CASE
        <foreach item="item" index="index" collection="list" >
            WHEN id = #{item.id} THEN #{item.primary}
        </foreach>
        ELSE `primary`
        END,
        `imageUrl` =
        CASE
        <foreach item="item" index="index" collection="list" >
            WHEN id = #{item.id} THEN #{item.imageUrl}
        </foreach>
        ELSE `imageUrl`
        END,
        `valid` =
        CASE
        <foreach item="item" index="index" collection="list" >
            WHEN id = #{item.id} THEN 1
        </foreach>
        ELSE 0
        END,
        `updateTime` = now(),
        `updateBy` = #{updateBy}
        where `goodsId` = #{goodsId} and valid = 1
    </update>

    <insert id="insert" parameterType="com.store.demo.domain.GoodsSpecUnit" useGeneratedKeys="true" keyProperty="id">
        insert into `goods_spec_unit`
        (
        `title`,
        `goodsId`,
        `specIds`,
        `stocks`,
        `price`,
        `salesVolume`,
        `primary`,
        `shippingCost`,
        `createBy`,
        `updateBy`,
        `status`,
        `imageUrl`
        )
        values
        (
        #{title},
        #{goodsId},
        #{specIds},
        #{stocks},
        #{price},
        #{salesVolume},
        #{primary},
        #{shippingCost},
        #{createBy},
        #{createBy},
        #{status},
        #{imageUrl}
        )
    </insert>

    <update id="update" parameterType="com.store.demo.domain.GoodsSpecUnit">
        update `goods_spec_unit` set
        `title` = #{title},
        `goodsId` = #{goodsId},
        `specIds` = #{specIds},
        `stocks` = #{stocks},
        `price` = #{price},
        `salesVolume` = #{salesVolume},
        `primary` = #{primary},
        `shippingCost` = #{shippingCost},
        `updateBy` = #{updateBy},
        `status` = #{status},
        `imageUrl` = #{imageUrl},
        `updateTime` = now()
        where `id` = #{id}
    </update>

    <delete id="deleteByGoodsId" parameterType="java.lang.Integer">
        update `goods_spec_unit` set valid = 0 where `goodsId` = #{id}
    </delete>
</mapper>